name: CI

on: [push, pull_request]

jobs:
  pretest:
    name: code quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade pre-commit
      - name: Run pre-test check
        run: pre-commit run --all-files --show-diff-on-failure

  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox
      env:
        PLATFORM: ${{ matrix.platform }}
    - name: Coverage
      if: matrix.python-version == '3.8'
      uses: codecov/codecov-action@v1

  napari:
    name: napari ${{ matrix.platform }}
    needs: [pretest, test]
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest, macos-latest]
    env:
      DISPLAY: ':99.0'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"
          curl https://raw.githubusercontent.com/napari/napari/master/setup.cfg -o napsetup.txt
      - uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/napsetup.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: start xvfb
        if: runner.os == 'Linux'
        run: |
          pip install pytest-xvfb
          sudo apt install libxkbcommon-x11-0
          /sbin/start-stop-daemon --start --quiet \
            --pidfile /tmp/custom_xvfb_99.pid --make-pidfile \
            --background --exec /usr/bin/Xvfb \
            -- :99 -screen 0 1920x1200x24 -ac +extension GLX
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install wheel setuptools
          pip install -r https://raw.githubusercontent.com/napari/napari/master/requirements/test.txt
          pip install git+https://github.com/napari/napari.git#egg=napari[all]
      - name: Test
        run: |
          pytest --color=yes --pyargs napari